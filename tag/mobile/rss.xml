<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>iwantmyreal.name</title>
   
   <link>http://iwantmyreal.name</link>
   <description>so I can use google to index things I fixed and then promptly forgot</description>
   <language>en-uk</language>
   <managingEditor> Sam Davies</managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>To drawRect or not to drawRect?</title>
	  <link>/blog/2014/03/29/to-drawrect-or-not-to-drawrect</link>
	  <author>Sam Davies</author>
	  <pubDate>2014-03-29T09:09:00+00:00</pubDate>
	  <guid>/blog/2014/03/29/to-drawrect-or-not-to-drawrect</guid>
	  <description><![CDATA[
	     <p>When you go searching StackOverflow for some instructions on how to do some
custom drawing on iOS, you’ll often find that the top answer instructs you to
create a custom subclass of <code class="highlighter-rouge">UIView</code>, and override the <code class="highlighter-rouge">drawRect:</code> method. But
is this always the best approach? What does <code class="highlighter-rouge">drawRect:</code> actually do, and what
are the other options for custom drawing on iOS?</p>

<p>In March 2014 I popped over to the US on behalf of
<a href="http://shinobicontrols.com">ShinobiControls</a> and presented this as a talk at
<a href="http://cocoaconf.com/dc-2014/home">CocoaConf DC</a> and
<a href="http://cocoaconf.com/austin-2014/home">CocoaConf Mini Austin</a>. I’ve collected the
slides and relevant links in this post for you to enjoy.</p>

<!-- more -->

<p>The slides are below - and are available on SpeakerDecK:</p>

<script async="" class="speakerdeck-embed" data-id="f3625e10996f01313e53426a9381af41" data-ratio="1.77777777777778" src="//speakerdeck.com/assets/embed.js"></script>

<p>The accompanying arrow-drawing project is available on Github at
<a href="https://github.com/sammyd/iOS-ArrowDrawing">github.com/sammyd/iOS-ArrowDrawing</a>.
Feel free to fork it and send me pull requests with any mistakes you find =]</p>

<p>I always appreciate comments/complaints hit me up on twitter -
<a href="https://twitter.com/iwantmyrealname">@iwantmyrealname</a>. And since I’m in
full-flow with the self-promotion, you should go and download a copy of my
<strong>free</strong> eBook - <a href="https://leanpub.com/ios7daybyday">iOS7: day by day</a>.</p>

<p>That’s it. I’m all out</p>

<p>sam</p>

	  ]]></description>
	</item>

	<item>
	  <title>The Art of Custom UI Controls</title>
	  <link>/blog/2013/09/18/the-art-of-custom-ui-controls</link>
	  <author>Sam Davies</author>
	  <pubDate>2013-09-18T10:44:00+00:00</pubDate>
	  <guid>/blog/2013/09/18/the-art-of-custom-ui-controls</guid>
	  <description><![CDATA[
	     <p>At various different events towards the end of 2013 I presented my thoughts on
how to build custom UI controls for mobile devices.</p>

<p>UI controls are really important to designers, developers and users as they
establish a common vocabulary which enables code/ui reuse between distinct
projects. Putting the effort in up-front, with the UX design, the API design and
the software architecture can save vast amounts of effort further down the line.</p>

<!-- more -->

<p>Creating custom controls doesn’t just have to be about providing the functionality
to people outside your team - your other dev users could be yourself in 6 months
time. It’s a lot easier to reuse a control which was designed to be suitably
generic as opposed to trying to bastardise an incredibly situation-specific
example.</p>

<p>I have put the slides I presented at <a href="http://360iDev.com">360iDev</a> in Denver
up only for you to view below. I presented a similar version of the talk in other
fora - including Melbourne Monthly Mobile Meetup, and the Sydney Mobile Meetup.</p>

<script async="" class="speakerdeck-embed" data-id="e6d4ee90fc9e013049591e80c2aa53be" data-ratio="1.77777777777778" src="//speakerdeck.com/assets/embed.js"></script>

<p>The presentation has an accompanying iOS project - ShinobiKnob, which is built
around the principles discussed. The source for this is on GitHub at
<a href="https://github.com/sammyd/ShinobiKnob">sammyd/ShinobiKnob</a>. I encourage you to
take a look at it - have a play, fork it, raise some issues, fix them ;) etc.</p>

<p>Custom controls are exactly what we do all the time at
<a href="http://shinobicontrols.com">ShinobiControls</a>. If you’re looking for complex
controls such as OpenGL-accelerated charts for your iOS or Android app, then I’d
recommend you take a look at our products before you embark on a massive project
yourself. If not - then have a go at building it yourself - it’s fun!</p>

<p>I’d love to hear any feedback you have - hit my up on twitter 
<a href="https://twitter.com/iwantmyrealname">@iwantmyrealname</a>.</p>


	  ]]></description>
	</item>


</channel>
</rss>
